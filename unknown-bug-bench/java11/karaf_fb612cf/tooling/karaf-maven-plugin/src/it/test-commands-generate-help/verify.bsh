/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.BufferedReader;
import java.io.File;
import java.nio.file.Path;
import java.io.FileNotFoundException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import java.net.URL;

boolean compareFiles(File file1, File file2) throws IOException {
    Path path1 = file1.toPath();
    Path path2 = file2.toPath();

    BufferedReader bf1 = Files.newBufferedReader(path1);
    BufferedReader bf2 = Files.newBufferedReader(path2);

        String line1 = "", line2 = "";
        while ((line1 = bf1.readLine()) != null) {
            line2 = bf2.readLine();
            if (line2 == null || !line1.equals(line2)) {
                return false;
            }
        }

        if (bf2.readLine() == null) {
            return true;
        }

        else {
            return false;
        }

    bf1.close();
    bf2.close();

    return true;
}

File overviewFile = new File(basedir, "test-markdown/target/docbkx/sources/commands.md");
File fooCommandFile = new File(basedir, "test-markdown/target/docbkx/sources/test-foo.md");
File barCommandFile = new File(basedir, "test-markdown/target/docbkx/sources/test-bar.md");

if (!barCommandFile.exists() || !fooCommandFile.exists() || !overviewFile.exists()) {
    throw new FileNotFoundException("Not all expected documentation was generated!");
}

return compareFiles(overviewFile, new File(basedir, "test-markdown/src/main/resources/commands.md"))
    && compareFiles(fooCommandFile, new File(basedir, "test-markdown/src/main/resources/test-foo.md"))
    && compareFiles(barCommandFile, new File(basedir, "test-markdown/src/main/resources/test-bar.md"));
